\\5Personal\Technology\raspberryPi\docs\speakers.txt

	https://iotbytes.wordpress.com/connect-configure-and-test-usb-microphone-and-speaker-with-raspberry-pi/
	https://www.instructables.com/Test-Sound-Card-and-Speakers-in-Raspberry-Pi/

	// in Linux, a software driver is known as a kernel module

abbreviations [

	ADC		Analog to Digital Converter
	ALSA	Advanced Linux Sound Architecture; uses hardware driver snd_bcm2835
	DAC		Digital to Analog Converter
	DTB		Device Tree Blob; instantiates optional external interfaces ( I2C , I2S , SPI ):
	DTO		Device Tree Overlay
	I2C		Inter-Integrated-Circuit (aka "I squared C") for chips on a single PCB, it is half-duplex ( one direction ) with two lines: SDA for data and SCL for clock, it can handle multiple slaves.
	I2S		Inter-IC Sound (aka Integrated Interchip Sound, IIS) for audio serial bus protocol, it is used to communicate PCM data between devices, it is common for audio in phones & tablets. the main PCM types are hw & plughw; hw: opens PCM devices directly with parameters required by the application / plughw: used for activating the plug-in layer / format for PCM devices is: PCM type , card number, device number, for example, plughw:0,0.
	LIRC	Linux Infrared Remote Control
	LKM		Loadable Kernel Module
	PCM		Pulse Code Modulation; it represents a playback device like a speaker
	SPI		Serial Peripheral Interface; for faster, synchronous ( clocked ) protocol, it is full duplex ( send and receive ) with master-slave architecture, It has good signal integrity , and fast.
	hw		provides direct communication to the hardware device
	plughw	translates from a std protocol to one supported by the device

	kernel_module	in Windows this is a software_driver
	software_driver	in Linux this is a kernel_module
]

config1 [ install, alsamixer, lsusb, dpkg

	configuration

		// probably ok already
		see: "\\5Personal\Technology\raspberryPi\docs\bluetooth.txt"
		$ sudo apt-get update -y
		$ sudo apt-get upgrade -y
		$ sudo apt-get install alsa-utils -y
		$ sudo apt-get install espeak python-espeak -y
		$ sudo apt-get install pi-bluetooth				// if using bluetooth
		$ sudo apt-get install bluetooth bluez blueman	// if using bluetooth

		// Sound GUI
		$ alsamixer

		$ lsusb			[ // check if the device is detected by RaspberryPi

			Bus 001 Device 004: ID 0c76:161e JMTek, LLC.		// fifine microphone
			Bus 001 Device 002: ID 2109:3431 VIA Labs, Inc. Hub
			Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
			Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
		]
		$ aplay -l		[ // list available playback devices (speaker); locate card & device number

			**** List of PLAYBACK Hardware Devices ****
			card 0: Headphones [bcm2835 Headphones], device 0: bcm2835 Headphones [bcm2835 Headphones]
			  Subdevices: 8/8
			  Subdevice #0: subdevice #0
			  Subdevice #1: subdevice #1
			  Subdevice #2: subdevice #2
			  Subdevice #3: subdevice #3
			  Subdevice #4: subdevice #4
			  Subdevice #5: subdevice #5
			  Subdevice #6: subdevice #6
			  Subdevice #7: subdevice #7
		]
		$ arecord -l	[ // list available capture devices (microphone); locate card & device number

			**** List of CAPTURE Hardware Devices ****
			card 1: Device [USB PnP Audio Device], device 0: USB Audio [USB Audio]
			  Subdevices: 1/1
			  Subdevice #0: subdevice #0
		]
		$ modinfo snd_bcm2835		[ // list sound card info

			filename:       /lib/modules/5.10.103-v7l+/kernel/drivers/staging/vc04_services/bcm2835-audio/snd-bcm2835.ko
			alias:          platform:bcm2835_audio
			license:        GPL
			description:    Alsa driver for BCM2835 chip
			author:         Dom Cobley
			srcversion:     61FBAD59CAC50D2D0F2BEBF
			alias:          of:N*T*Cbrcm,bcm2835-audioC*
			alias:          of:N*T*Cbrcm,bcm2835-audio
			depends:        snd-pcm,snd
			staging:        Y
			intree:         Y
			name:           snd_bcm2835
			vermagic:       5.10.103-v7l+ SMP mod_unload modversions ARMv7 p2v8
			parm:           force_bulk:Force use of vchiq bulk for audio (bool)
			parm:           enable_hdmi:Enables HDMI virtual audio device (bool)
			parm:           enable_headphones:Enables Headphones virtual audio device (bool)
			parm:           enable_compat_alsa:Enables ALSA compatibility virtual audio device (bool)
		]
		$ ls -l /proc/asound/card*	[ // identify sound card chip device id, i.e.: pcm0p

			-r--r--r-- 1 root root 0 May 27 20:03 /proc/asound/cards

			/proc/asound/card0:
			total 0
			-r--r--r--  1 root root 0 May 27 20:07 id
			dr-xr-xr-x 11 root root 0 May 27 17:23 pcm0p

			/proc/asound/card1:
			total 0
			-r--r--r-- 1 root root 0 May 27 20:07 id
			dr-xr-xr-x 4 root root 0 May 27 19:49 pcm0c
			-r--r--r-- 1 root root 0 May 27 20:07 stream0
			-r--r--r-- 1 root root 0 May 27 20:07 usbbus
			-r--r--r-- 1 root root 0 May 27 20:07 usbid
			-r--r--r-- 1 root root 0 May 27 20:07 usbmixer
		]

		// alterations
		$ sudo nano /home/pi/.asoundrc	// local changes?
		$ sudo nano /etc/asound.conf	// global changes?
		$ sudo dpkg -l | grep -i  xxx
		$ sudo dpkg -l | grep ^ii.*pulseaudio	// check to see if pulseaudio is installed
]

config2 [ raspi, lsusb, dmesg

	$ sudo raspi-config > Advanced Options > Audio > Auto

	$ dmesg | grep Headphone	// means you have a CM-headphone chipset with a C-Media USB Headphone Set Driver
	$ dmesg | grep cm109		// means you have a CM109 chipset , with a CM109 Phone Interface Driver
	$ dmesg | grep C-Media		// means you have a CM108 chipset , this worked on RPI0, RPI4
	$ dmesg | grep General		// means you have a GeneralPlus chipset

	$ cat /proc/asound/cards	// list sound card chip card id; i.e.: 0 [Headphones ]: bcm2835_headpho - bcm2835 Headphones; card id is: 0, card id name is: Headphones

		0 [Headphones    ]: bcm2835_headpho - bcm2835 Headphones
							bcm2835 Headphones
		1 [Device        ]: USB-Audio - USB PnP Audio Device
							USB PnP Audio Device at usb-0000:01:00.0-1.4, full speed

	$ cat /proc/asound/modules	// list sound card kernel module (software driver); i.e.: 0 snd_bcm2835

		0 snd_bcm2835
		1 snd_usb_audio

	$ sudo nano /boot/config.txt			// may need dtparam=i2s=on ;#dtparam=audio=on blocks snd_bcm2835?
	$ sudo nano /etc/modules				// may need snd_bcm2835, may have "i2c-dev"
	$ sudo nano /usr/share/alsa/alsa.conf	// defaults.ctl.card 1...

	$ sudo modprobe bcm2835-v4l2			// uses "L" not "1" ; probably loaded by default; may have "i2c-dev"
	$ sudo modprobe snd_bcm2835

		// the hardware driver snd_bcm2835 is a LKM ( Loadable Kernel Module )
		// it abstracts the audio I/O from the Broadcom 2835 SOC
		// it is used by ALSA ( Advanced Linux Sound Architecture )
		// modprobe is a Linux program used to add or remove an LKM to the Linux kernel

	$ jack_control start						// error issue
]

testing [ speaker, arecord, mplayer, aplay

	// physical setup
	$ speaker-test -c2							// test audio , white noise
	$ speaker-test -c2 -D plughw:1,0			// test audio : PCM type , card number, device number
	$ speaker-test -t wav -c2					// test audio , speech
	$ speaker-test -t wav -c2 -D plughw:1,0		// test audio , speech, specifying outputs
	$ espeak "Hello, World!"

	// record
	$ arecord -l								// shows webcam list; that is an "L"
	$ arecord -d 3 test.wav						// -d 3 means duration 3 seconds
	$ arecord -d 3 -D plughw:1,0 test.wav		// create test sound for 3 seconds
	$ arecord -D plughw:1,0 test.wav			// -D means associate to device "plughw:1,0"
	$ aplay raspberryPi/sound/ping.wav			// play test wav, if sound card installed

		https://linux.die.net/man/1/arecord
		-c, --channels=#	The number of channels.
		-r, --rate=#<Hz>	Sampling rate in Hertz.
		-d, --duration=#	Interrupt after # seconds; 0 means infinity.
		-t, --file-type TYPE	File type (voc, wav, raw or au); defaults to wav

	$ omxplayer mamgeorge/sound/mlgPiano.mp3	// did NOT work on wav or mp3
	$ mplayer mamgeorge/sound/ping.wav			// worked as expected; later stopped "apparently" missing -ao alsa
	$ mplayer

		http://www.mplayerhq.hu/DOCS/man/en/mplayer.1.html
		-ao alsa		set audio output driver to alsa
		-list-options
		-really-quiet
		-volume <-1-100>

		doc sections [

			NAME
			SYNOPSIS
			DESCRIPTION
			INTERACTIVE CONTROL
			USAGE
			CONFIGURATION FILES
			PROFILES
			GENERAL OPTIONS
			PLAYER OPTIONS (MPLAYER ONLY)
			DEMUXER/STREAM OPTIONS
			OSD/SUBTITLE OPTIONS
			AUDIO OUTPUT OPTIONS (MPLAYER ONLY)
			AUDIO OUTPUT DRIVERS (MPLAYER ONLY)
			VIDEO OUTPUT OPTIONS (MPLAYER ONLY)
			VIDEO OUTPUT DRIVERS (MPLAYER ONLY)
			DECODING/FILTERING OPTIONS
			AUDIO FILTERS
			VIDEO FILTERS
			GENERAL ENCODING OPTIONS (MENCODER ONLY)
			CODEC SPECIFIC ENCODING OPTIONS (MENCODER ONLY)
			ENVIRONMENT VARIABLES
			FILES
			EXAMPLES OF MPLAYER USAGE
			EXAMPLES OF MENCODER USAGE
			BUGS
			AUTHORS
		]

	// playback
	$ aplay -l										// lists devices
	$ aplay mamgeorge/sound/ping.wav				// play test wav, if sound card installed
	$ aplay -D bluealsa mamgeorge/sound/ping.wav	// play test wav, if device bluealsa installed
	$ aplay -D bluealsa:HCI=hci0,DEV=xx:xx:xx:xx:xx:xx,PROFILE=a2dp mamgeorge/sound/ping.wav
]

circuit [ uses circuit with GPIO pins

	https://www.raspberrypi.org/blog/tinkernut-diy-pi-zero-audio/
	https://learn.adafruit.com/adding-basic-lsaudio-ouput-to-raspberry-pi-zero/pi-zero-pwm-audio
	http://shallowsky.com/blog/hardware/pi-zero-audio.html
	https://theraspberryblonde.wordpress.com/2016/09/01/add-sound-to-your-pi-zero/

		1 two 270 ohm resistors
		2 two 150 ohm resistors
		3 two 1µF ( or 10µF ) electrolytic capacitors
		4 two 10 nF ( or 0.01 µf or 33nF ) polyester film capacitors
		5 3.5mm headphone jack

	$ sudo nano /boot/config.txt

		//Enabling PWM audio through DTO ( device tree overlay )
		dtoverlay=pwm-2chan , pin=18 , func=2pin2=13 , func2=4

		//Enable audio ( loads snd_bcm2835 )
		dtparam=audio=on

	$ sudo raspi-config > Advanced Options > Audio > Headphone
]

TTS [ espeak flite festival google pyttsx

	https://elinux.org/RPi_Text_to_Speech_(Speech_Synthesis)

		$ espeak "Hello, World!"
		$ espeak "Hello, World!" 2>/dev/null
		$ date +"%Y-%m-%d %I:%M:%S%p" | espeak
		$ flite -t "Hello, World!"
		$ echo "Hello, World!" | festival --tts
		$ ./speech.sh "Hello, World!"
		$ ./raspberryPi/docs/speech.sh "Hello, World!"

		$ dated=$(date +"%Y-%m-%d_%I:%M:%S%p")
		$ ./speech.sh $dated

		$ espeak -f mamgeorge/docs/speech_robot.txt
		$ flite -f mamgeorge/docs/speech_robot.txt
		$ festival --tts mamgeorge/docs/speech_robot.txt

		$ sed -n '5,10p;10q' mamgeorge/docs/speech_robot.txt | espeak
		$ sed -n '5,10p;10q' mamgeorge/docs/speech_robot.txt | flite
		$ sed -n '5,10p;10q' mamgeorge/docs/speech_robot.txt | festival --tts

	tts espeak [ v1.48.03  04.Mar.14 (voices date sed python)

		// eSpeak --version		( text-to-speech: 1.48.03  04.Mar.14 )
			-f <text file>	Speaks a text file.
			-a <integer> Sets amplitude (volume) in a range of 0 to 200. The default is 100.
			-p <integer> Adjusts the pitch in a range of 0 to 99. The default is 50.
			-s <integer> Sets the speed in words-per-minute. The default is 180.
			-k <integer> Indicate words which begin with capital letters. Try -k5
			-v <voice filename>[+<variant>] Sets a Voice
			-w <wave file> Writes to WAV format
			--version

		$ sudo apt-get install espeak python-espeak
		$ espeak --voices

		$ espeak "Hello, World!" // v: voice, m: male, p: pitch, s: speed wpm, a: amplitude, k: capitals
		$ espeak "Hello, World!" -ven-us+m3 -p50 -k5 -s180 -a50 --stdout | aplay -f cd -D bluealsa
		$ espeak "Hello, World!" -stdout | aplay -f cd -D bluealsa
		$ espeak -ven+m3 -k5 -s150 -a50 "Hello, World!"
		$ espeak "Hello. My name is Matt!"
		$ espeak "Hello. My name is Matt!" -stdout | aplay -f cd -D bluealsa
		$ espeak "Hello. My name is Matt!" -a10 --stdout | aplay -f cd -D bluealsa
		$ espeak "Hello. My name is Matt!" -ven-us+m3 -p50 -k5 -s180 -a20 --stdout | aplay -f cd -D bluealsa
		$ espeak -f rom_12.txt
		$ espeak -f rom_12.txt -ven-us+m5 -p50 -k5 -s180 -a10 --stdout | aplay -f cd -D bluealsa
		$ espeak -m -vzh 'ni3 hao3. <break strength = "strong" /> wo3 shi4 qiao2 ma3 ding1!'

		$ date +"%Y-%m-%d %I:%M:%S%p" | espeak
		$ date +"date... %Y...%m...%d... time... %I...%M...%S...%p" | espeak
		$ date '+year %Y month %m date %d <break strength = "strong" /> time %I:%M:%S%p' | espeak -m -ven+f5
		$ date '+year %Y month %m date %d <break strength = "strong" /> time %I:%M:%S%p' | espeak -m -ven-us+m3 -p50 -k5 -s180 -a50
		$ date '+year %Y month %m date %d <break strength = "strong" /> time %I:%M:%S%p' | espeak -m -ven-us+m3 -p50 -k5 -s180 -a50 --stdout | aplay -f cd -D bluealsa
		$ date 'date: %Y/%m/%d <break strength = "strong" /> time: %I:%M:%S%p' | espeak -m -ven-us+m3 -p50 -k5 -s180 -a50 --stdout | aplay -f cd -D bluealsa

	// special

		$ sudo nano sample.py
			#! /usr/bin/env python
			from subprocess import call
			call( [ espeak "Pi initialized. Hello, World!" ] , shell=True )

		os.system( "espeak 'Hello {}' --stdout | aplay -f cd -D bluealsa".format( insertVal ) )		// python
]

	tts flite [ v2.1-release-3

		$ sudo apt-get install flite -y
		$ flite -lv

		$ flite -t "Hello, World!"
		$ flite -f anySpeech.txt

		$ date "+%Y %m %d , %B %A , %H:%M %P" | flite
	]

	tts festival [ v2.5.0:release December 2017

		$ sudo apt-get install festival -y

		$ echo "Hello, World!" | festival --tts

		$ date +"date %Y %m %d, time %I %M %S %p" | festival --tts

		$ festival --tts anySpeech.txt

		$ hostname -I | festival --tts
	]

	tts inet google [ uses mplayer

		/* https://elinux.org/RPi_Text_to_Speech_(Speech_Synthesis)

			http://translate.google.com/translate_tts
				?ie		=UTF-8
				&client	=tw-ob
				&tl		=en
				&q		=$*
		*/

		// check to see if mplayer is there

			$ dpkg -l | grep -i mplayer

			$ sudo apt-get install mplayer -y

			$ sudo nano speech.sh // requires Unix EOL; alsa vs pulse depends on connection type

				#!/bin/bash
				link="http://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&tl=en&q=$*"
				#say( ) { local IFS=+;/usr/bin/mplayer -ao alsa -really-quiet -noconsolecontrols $link }
				say( ) { local IFS=+;/usr/bin/mplayer -ao pulse $link; }
				say $*

			$ sudo chmod 777 speech.sh

			$ ./speech.sh "Hello, World!"
			$ ./raspberryPi/docs/speech.sh "Hello, World!"

			$ mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&tl=en&q=HI"

			$ words="Hello There"
			$ link="http://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&tl=en&q="
			$ mplayer -ao alsa -really-quiet $link"$words"
			$ mplayer -ao pulse -really-quiet $link"$words"

		// dynamically

			$ mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&tl=en&q=HI"

			$ words="Hello There"
			$ link="http://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&tl=en&q="
			$ mplayer -ao alsa -really-quiet $link"$words"

		// file

			$ .speech.sh (sed -n '5,10p;10q' mamgeorge/docs/speech_robot.txt)
	]

	pyttsx ( Python text-to-speech library ) [

		$ wget https://pypi.python.org/packages/source/p/pyttsx/pyttsx-1.1.tar.gz
		$ gunzip pyttsx-1.1.tar.gz
		$ tar -xf pyttsx-1.1.tar
		$ cd pyttsx-1.1/
		$ sudo python setup.py install
	]
]

STT [ VAC, Google, Hickson, Coqui

	VAC Voice Activated command [ generic STT Speech To Text

		links

			https://maker.pro/raspberry-pi/tutorial/the-best-voice-recognition-software-for-raspberry-pi

		USB microphone

			or webcam with builtin microphone
			or microphone and AudioCard

		raspberry pi speech recognition programs

			Google Assistants API: online
			RPi Voice Recognition by Oscar Liang
			RPi Voice Control by Steven Hickson
			Jasper: works offline, compromises accuracy and speed
			PocketSphinx , CMUSphinx
	]

	Google Assistant API [

		https://www.techradar.com/how-to/how-to-control-the-raspberry-pi-with-your-voice
		https://www.instructables.com/id/Voice-Activated-Google-Assistant-for-Raspberry-Pi/

		https://console.cloud.google.com/project

			pivoice
			goto API manager add Google Assistant
			goto Credentials
				487210436028-39dtnaadikgp05tsh32445mdr9j5t8tg.apps.googleusercontent.com
				GJNri2jNIAZlJYIx2irqWdue

		https://myaccount.google.com/activitycontrols

			turn on: web , location , device , voice

		updates

			sudo apt-get install python3-dev python3-venv
			python3 -m venv env
			env/bin/python -m pip install --upgrade pip setuptools
			source env/bin/activate

			python -m pip install https://github.com/googlesamples/assistant-sdk-python/releases/download/0.3.0/google_assistant_library-0.0.2-py2.py3-none-linux_armv7l.whl
			python -m pip install upgrade google-auth-oauthlib[tool]
			google-oauthlib-tool client-secrets /home/pi/Downloads/client_secret_client-id487210436028.json scope https://www.googleapis.com/auth/assistant-sdk-prototype save headless

			ERROR
	]

	code based [

		Steven Hickson

			https://stevenhickson.blogspot.com/2013/04/voice-control-on-raspberry-pi.html

		PiAUISuite (Home Automation)

			https://www.instructables.com/Raspberry-Pi-Voice-Controlled-Home-Automation/#:~:text=Use%20the%20below%20command%20to%20launch%20Voice%20Command.,prompt%20before%20going%20into%20a%20voice%20recognition%20mode.

			$ sudo apt-get install wiringpi
			$ gpio -v

				/home/pi/scripts/led.sh (chmod u+x led)

					#!/bin/bash
					if [ $# > 1 ]
					then
					/usr/local/bin/gpio mode 4 out
					if [[ "$1" = "on" ]]
					then
					/usr/local/bin/gpio write 4 on
					fi
					if [[ "$1" = "off" ]]
					then
					/usr/local/bin/gpio write 4 off
					fi
					fi

			$ sudo apt-get install -y libboost-dev libboost-regex-dev youtube-dl axel curl xterm libcurl4-gnutls-dev mpg123 flac sox

			$ sudo apt-get install git-core
			$ git clone https://github.com/StevenHickson/PiAUISuite.git
			$ cd PiAUISuite/Install
			$ ./InstallAUISuite.sh
				gtextcommand
				>google voice user, pass: mamgeorge, q_1_ZGV
				>command keyword: cmd
				>valid number: 16143777835

			$ sudo nano /home/pi/PiAUISuite/VoiceCommand/commands.conf

				light==/home/pi/scripts/led.sh

			$ voicecommand -c -k pi -v -b0 -i

					-c		continuously
					-k pi	sets prompt to get attention
					-v		verify the prompt before voice recognition
					-i		only process explicit commands in config file
					-b0		forces voice command to not use filler text before response.

		https://rpiai.wordpress.com/2014/01/29/speech-to-text-stt-2
	]

	Coqui STT petewarden hackster spchcat, TensorFlow [

		Need RPi4 because it uses optimized NEON instructions to run in real-time
			and these weren't present on the original Pi Ones or Zeros

		overview
			https://www.hackster.io/petewarden/recognizing-speech-with-a-raspberry-pi-50b0e6
			https://petewarden.com/2021/12/27/how-to-get-started-with-coquis-open-source-on-device-speech-to-text-tool/

		detail

			https://pythonrepo.com/repo/petewarden-spchcat
			https://github.com/petewarden/spchcat

			$ sudo dpkg -i ~/raspberryPi/sound/spchcat_0.0-2_armhf.deb
			$ sudo apt-get install sox

		usage

			$ spchcat								//
			$ spchcat --source=system				// attempt to listen to audio machine is playing, like videos or songs
			$ spchcat anyFile.wav					// transcribe sound
			$ spchcat anyFile.wav > transcript.txt	// save transcription

			$ spchcat --language=en_US				// English
			$ spchcat --language=el_GR				// Greek
			$ spchcat --language=de_DE				// German
			$ spchcat --language=fr_FR				// French
			$ spchcat --language=id_ID				// Indonesian
			$ spchcat --language=ru_RU				// Russian
			$ spchcat --language=ta_IN				// Tamil
			$ spchcat --language=yo_NG				// Yoruba

		ERROR: error loading library libsox.so.3 [ RESOLVED: installed library

			spchcat: error while loading shared libraries: libsox.so.3: cannot open shared object file: No such file or directory

			RESOLUTION:

				$sudo find / -name libsox.so.3
					file does not exist; libsox - SoX, an audio file-format and effect library

				$ sudo apt-get install sox
		]

		ERROR: PuTTY X11 proxy: unable to connect to forwarded X server [ RESOLVED: uncheck X11

			pi@raspberrypi:~ $ spchcat
			TensorFlow: v2.3.0-14-g4bdd3955115
			 Coqui STT: v1.1.0-0-gf3605e23
			PuTTY X11 proxy: unable to connect to forwarded X server: Network error: Connection refused
			xcb_connection_has_error() returned true

			RESOLUTION:

				TEST: Putty > Connection > SSH > X11 > [_] Enabled X11 forwarding
					(must uncheck!)
		]
	]
]

ERRORS [

	ERROR [ raspberry pi usb microphone not recording

		$ aplay mamgeorge/sound/ping.wav
		$ arecord -l
		$ arecord -d 3 -D plughw:1,0 test.wav	// have to hover over it

		$ amixer -c 1 set Master 95%			// no GUI; c: channel

		$ sudo alsamixer

			F6 selected sound card
				x default
				x0 bcm2835 Headphones
				x1 USB PnP Sound device <--select

			F5 Item

			tab to device; arrows to raise sound

		$ aplay test.wav

		// usb mic required hovering over it
		// webcam got better sound

			device: webcam ( logitech c170 using fswebcam or arecord/omxplayer )

			$40 Logitech C270 3MP 1280 x 720pixels USB 2.0 Black Webcam
			$36 Logitech C310 HD Webcam, Standard Packaging - Black
			$70 Logitech C920x Pro HD Webcam
			$40 NexiGo N60 1080P HD Webcam with Microphone, Privacy Cover
	]

	ERROR [ ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.xxxx

		ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.rear
		ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.center_lfe
		ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.side
		ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.hdmi
		ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.modem
		ALSA lib pcm.c:2495:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.phoneline

		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.surround21
		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.surround40
		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.surround41
		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.surround50
		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.surround51
		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.surround71
		ALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.iec958

		RESOLUTION ?

			see changes above for "/etc/asound.conf" & "/usr/share/alsa/alsa.conf"

			unknown PCM cards are removed by commenting out relevant lines

				or, changing

					pcm.front cards.pcm.front
					pcm.front cards.pcm.default

				or , suppress error message

					cards.pcm.front 1

				or , comment out
	]

	ERROR [ jack server is not running or cannot be started

		RESOLUTION
			$ jack_control start
	]
]
----
