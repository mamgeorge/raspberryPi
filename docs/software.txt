\\5Personal\Technology\raspberryPi\docs\software.txt

common (commmands connecting projects updating programs terms) [

	commmands [ general

		https://www.circuitbasics.com/useful-raspberry-pi-commands/

		cut&paste [

			clipboard: note Putty SSH paste: SHIFT-INSERT , copy: CTRL-INSERT
			note: insert must be on numpad
		]

		to add remote shell access , see: "network.txt": network_SSH

		$ sudo shutdown -h now					// shutdown
		$ sudo reboot							// reboot

		$ sudo raspi-config						// basic config
		$ sudo apt-get update -y				// 1st super user do advanced packaging tool update
		$ sudo apt-get upgrade -y				// 2nd super user do advanced packaging tool upgrade
		$ sudo apt full-upgrade	-y				// 2nd sudo apt command to pick up dependencies
		$ sudo apt-get autoremove -y			// cleanup

		$ cat /proc/device-tree/model && echo	// Raspberry Pi 2 Model B Rev 1.1 ; MN: q_1_Z_TP
		$ cat /etc/os-release					// PRETTY_NAME="Raspbian GNU/Linux 10 (buster)"
		$ cat /sys/class/net/wlan0/address		// MAC address
		$ uname -a								// Linux raspberrypi 4.14.90-v7+ #1183 SMP Fri Dec 21 14:03:50 GMT 2018 armv7l GNU/Linux
		$ hostname -I							// 192.168.1.13
		$ sudo ifconfig							// gets network info & IP address
		$ iwgetid								// wlan0 ESSID:"xxxx"
		$ df -h									// /dev/root 14G ...
		$ free -m								// Mem: 732 ...

		$ sudo nano /etc/network/interfaces		// update password , etc
		$ raspi-gpio get						// pins list
		$ gpio readall							// printout gpio cool; from wiringpi
		$ pinout								// printout gpio cooler
	]

	connecting wifi thru ips [

		http://192.168.1.1 , admin , q-1-Z-TP

			RPI0			 pi, s4_m2 | ip 192.168.1.xx |?B8:27:EB:D4:F0:6E?
			RPI0_WH robot	 pi, s4_m2 | ip 192.168.1.21 | B8:27:EB:2B:0F:91
			RPI0_WH	male	 pi, s4_m2 | ip 192.168.1.22 | B8:27:EB:fc:a5:72
			RPI2 sensehat	 pi, s4_m2 | ip 192.168.1.19 | 00:0F:60:05:51:1D, 169.254.62.195
			RPI4 1.5GZ 8GB	 pi, s4_m2 | ip 192.168.1.14 | DC:A6:32:DB:19:F9

		c:>	arp -a -v							// ARP: Address Resolution Protocol, -a shows arp entries , -v verbose

		$ cat /sys/class/net/wlan0/address		// MAC address
	]

	connecting SSH thru USB [

		connecting raspberryPi with SSH thru USB:

			https://desertbot.io/blog/headless-pi-zero-ssh-access-over-usb-windows

		1 save a file named only "ssh" with one space in the RPi root drive:

			"G:>ssh"

		2 save "G:>config.txt" with the following appended:

			dtoverlay=dwc2

		3 save "G:>cmdline.txt" with the following inserted after rootwait and one space:

			modules-load=dwc2,g_ether

		4 plug in pi at usb (using USB C adaptor)

			// appears to work if using USB C adaptor on connected network: s4_m2 shu4mei2

		5 shell into RPi: "ssh pi@raspberrypi.local" [

			C:> ssh pi@raspberrypi.local

			ERROR: this did NOT work on USB port without network [

				somes guides say to set key first:
					C:> ssh-keygen -R raspberrypi.local
					FAIL

				RESOLUTION:

				somes guides say to add "Bonjour"
					Bonjour networking protocol sends and receives network packets on UDP port 5353
					https://support.apple.com/kb/DL999?locale=en_US
					no help
					FAIL

				somes guides say to add "RNDIS Ethernet gadget"
					RNDIS (Remote Network Driver Interface Specification) is a Microsoft proprietary protocol
					https://www.raspberrypi.org/forums/viewtopic.php?t=245184
					https://www.factoryforward.com/pi-zero-w-headless-setup-windows10-rndis-driver-issue-resolved/
						assumed device shows up in com port
					"RNDIS Ethernet gadget" is NOT added in Windows 10!
					FAIL
			]

			FAIL: NO RNDIS
		]

		6 installing RNDIS for Windows 10 [

			RNDIS is an Ethernet via USB driver
				which enables virtual Ethernet connection link between the Pi and your Laptop

				downloaded: "http://web1.moddevices.com/shared/mod-duo-rndis.zip"
					into: "C:\Users\mamge\Downloads\RNDIS_W10_cat"

				Open Device Manager and you can see the Pi is detected as USB Serial Device at COM port under the
					Ports(COM & LPT). Right click on it and select “Update Driver Software”.

					https://www.factoryforward.com/pi-zero-w-headless-setup-windows10-rndis-driver-issue-resolved/

				FAIL: NO COM PORT

			show hidden

				System > DeviceManager > View > "Show hidden devices"

				System > DeviceManager > <computer> NetworkAdapters > "USB Ethernet/RNDIS Gadget"

					weird because "it was not there earlier" , it was "greyed" out

					General
						Device type:		Network adapters
						Manufacturer:		Acer Incorporated
						Location:			Port_#0003.Hub_#0001

					Driver
						Driver Provider:	Acer Incorporated
						Driver Date:		1/13/2010
						Driver Version:		1.0.0.0
						Driver Signer:		Microsoft Windows Hardware Compatibility Publisher

						Driver Details
							Driver Files:	"C:\Windows\System32\drivers\usb8023.sys"
							Provider:			Microsoft Corporation
							File version:		10.0.18362.1 (WinBuild. 160101.0600)
							Copyright:			@Microsoft Corporation
							Digital Signer:		Microsoft Windows

					Details
						Property
							Device description
							Value			USB Ethernet/RNDIS Gadget

					Events
						Device USB\VID_0525&PID_A4A2\5&8b74c98&0&3 requires further installation.
		]
	]

	projects [ links, project_arm, menu, MAT, network, sound, sensehat, monitor

		links [ simulators

			https://en.wikipedia.org/wiki/Comparison_of_EDA_software

			https://www.element14.com/community/groups/development-tools/blog/2016/09/03/best-free-online-circuit-simulator

			https://www.circuitlab.com

			http://fritzing.org/
		]

		project_arm [

			9 motors?
				stepper + stepper + servo
				stepper + stepper + servo
				waist + head + pan

			general [

				https://www.circuitbasics.com/basics-of-the-i2c-communication-protocol/
				https://www.best-microcontroller-projects.com/i2c-tutorial.html
				https://learn.sparkfun.com/tutorials/i2c/all
				https://www.robot-electronics.co.uk/i2c-tutorial
				https://www.bluedot.space/tutorials/how-many-devices-can-you-connect-on-i2c-bus/

				driving Stepper_Servo
				https://www.raspberrypi.org/forums/viewtopic.php?t=147594

				howMany
				https://www.raspberrypi.org/forums/viewtopic.php?t=117605

				offload
				https://www.element14.com/community/community/raspberry-pi/raspberrypi_projects/blog/2017/07/04/offload-raspberry-pi-tasks-with-the-i2c-bus-turning-stepper-motors
			]

			i2c_stepper: with Polulu A4988 stepper driver

				https://forum.arduino.cc/index.php?topic=277692.0

			i2c_servo: with Adafruit PCA9685 servo driver

				https://learn.adafruit.com/16-channel-pwm-servo-driver

			$ ls /dev/*i2c*			/*/// returns /dev/i2c-1
		]

		menu [ $ ./menu.sh ]

		MAT (on RPI0wf , 22) [

			see: "MAT.txt"
			$ node /home/pi/servers/node/expressoMAT.js

			// controlling camera
			see: "camera.txt"
			shell: C:\servers\Xming\Xming.exe :0 -screen 0 800x600+100+100@1
			- or -
			shell: C:\servers\Xming\Xming.exe :0 -clipboard -multiwindow
			$ raspistill -t 100 -vf -o img.jpg	-md 6 -q 10
			$ feh -g 600x400 -d img.jpg

			// controlling gripper (on RPI0wf , 22)

				// red to p2, blk to grnd (p6), ylw to p7

				$ sudo nano python/servos/servo_acts.py

				$ python python/servos/servo_keys.py	// based on keyboard
				$ python python/servos/servo_loop.py	// continuous
				$ python python/servos/servo_once.py
		]

		network thru CLI [ see: "network.txt":internet ]

		sound USB [ use "USB Virtual Sound Adapter" , speaker , alsamixer , espeak "HI!": see: "sound.txt":RPI_setup ]

		sensehat (on RPI2B , 13) [ $ python python/sensehat/sens_samples.py ]

 		monitor thru GPIO [ see: "hardware\hardware_notes.txt":monitor, see: "hardware\hardware_list.txt":components:comm ]
	]

	updating [ subst, "git"

		$ c:>
		$ subst r: c:\Users\mamge\OneDrive\Documents\5Personal\Technology\raspberryPi
		$ r:
		
		$ git branch
		$ git add .
		$ git commit -m "xxxx"
		$ git push
	]

	programs [ Rasbpian, bash, Python, gcc, etc

		Rasbpian (Unix > Linux > Debian 7 Wheezy > Raspbian) [

			Debian releases

			2013-09-27	07 Wheezy	/ kernel 3.06, gcc 4.7.2
			2015-09-28	08 Jessie	/ kernel 4.01, gcc 4.9
			2017-08-17	09 Stretch	/ kernel 4.09, gcc 6.3
			2019-06-24	10 Buster	/ kernel 4.19, gcc 8.3
			2021-05-07	10 Buster	/ kernel 5.10.17 , gcc 8.3
			2021-06-07	11 Bullseye	/ kernel 5.10
		]

		bash 4.3.30(1) // was originally bash 2.2.37(1)

			berries at top of login indicate the number of CPU cores in the processor

		Python 3.2.3 (default Python 2.7.3)

			$ sudo idle			// for Python2 IDE ; useful for pibrella
			$ sudo idle3		// for Python3 IDE
			$ sudo python -i	// for interactive

				$ print("sys.version: " + sys.version)

		gcc 4.9.2-10 // was 4.6.3

			$ sudo gcc --version

		PIXEL (Pi Improved X-Window Environment Lightweight)

			main desktop environment

			was LXDE = Lightweight X11 Desktop Environment

		vmware images

			https://www.osboxes.org/raspbian/#raspbian-2019-04-vmware
			vmware_Raspbian_20190411_32bit.7z
			C:\Program Files\Microsoft VS Code\resources
	]

	terms [

		28BYJ48	Frame: 28=dia mm, Category: BY=PM/VR/HY, Configuration: J/Z/HJ built in reducer, 48: steps per rev, 28BYJ-48-A: A is Derivative Code
		ADC		Analog 2 Digital Converter
		ASIC	Application Specific Integrated Circuit - customized IC
		BCM		Broadcom
		BJT		Bipolar Junction Transistor
		CSI		Camera Serial Interface
		DCE		Data Circuit-Terminating Equipment (ex. modem)
		DIMM	Dual In Line Memory Module
		DIP		Dual Inline Package
		DSI		Display Serial Interface
		DTE		Data Terminal Equipment (ex. terminal)
		FET		Field Effect Transistor
		FPC		Flexible Printed Circuit
		FPGA	Field Programmable Gate Array
		FTDI	Future Technology Devices International
		GPIO	General Purpose Input/Output
		HDMI	High Definition Multimedia Interface
		HB		motor Hybrid Synchronous, Combination of PM and VR
		I2C		Inter Integrated Circuit
		IC		Integrated Circuit
		J8		40 pin pinout board
		LASER	Light Amplification Stimulated Emission Radiation
		LCD		Liquid Crystal Display
		LED		Light Emitting Diode
		LPDDR	Low Power Double Data Rate synchronous
		MIPI	Mobile Industry Processor Interface
		MOSFET	Metal Oxide Semiconductor FET
		NEMA	National Electrical Manufacturers Association
		OLED	Organic Light Emitting Diode
		P1		26 pin pinout board
		PCB		Printed Circuit Board
		PDIP	Plastic Dip Package
		PM		motor Permanent Magnet, Active rotor
		POE		Power over Ethernet
		RGB		Red Green Blue
		RoHS	Restriction of Hazardous Substances, aka Directive 2002/95/EC
		RPI0WHf	0: Zero, W: WiFi, H: 40PIN pre-soldered GPIO headers, f: female
		SIP		Single Inline Package
		SODIMM	Small Outline DIMM
		SOIC	Small Outline Integrated Circuit
		SOC		System on Chip
		SOP		Small Outline Package
		SPI 	Serial Peripheral Interface
		TSSOP	Thin Shrink Small Outline Package
		UART	Universal Asynchronous Receive/Transmit
		VR		motor Variable Reluctance, Reactive rotor
	]
]

bash 1 (system executables navigation GUIs) [

	https://www.raspberrypi.org/documentation/linux/usage/commands.md
	https://lsingelectronics.org/articles/raspberry-PI/ten-things-raspberry-PI/
	http://www.tecmint.com/35-practical-examples-of-linux-find-command/
	http://pi.bek.no/
	http://ss64.com/bash/

system [

	$ sudo shutdown -h now				// shutdown (halt)
	$ sudo shutdown -r now				// reboot
	$ sudo reboot						// reboot

	$ sudo apt-get clean				// super user do apt clean up leftover packages
	$ sudo apt-get update -y			// super user do advanced packaging tool update
	$ sudo apt-get upgrade -y			// super user do advanced packaging tool upgrade
	$ sudo apt-get autoremove -y		// clean stuff
	$ sudo raspi-config					// mainly for enabling SSH if CAT5 cable is used, etc.
	$ sudo rpi-update					// firmware update , can use UPDATE_SELF=0 to defer current program
	$ sudo apt-get install rpi-update	// firmware update
	$ sudo apt-get -purge remove XXXX	// remove stuff
	$ sudo dpkg -l | grep -i xxx		// determine id package is installed

	$ sudo cat /proc/device-tree/model && echo	// get model: Raspberry Pi 2 Model B Rev 1.1
	$ sudo cat /proc/version			// Linux version 4.14.90-v7+ (dom@dom-XPS-13-9370) (gcc version 4.9.3 (crosstool-NG crosstool-ng-1.22.0-88-g8460611)) #1183 SMP Fri Dec 21 14:03:50 GMT 2018
	$ sudo cat /proc/cpuinfo			// model name : ARMv7 Processor rev 5 (v7l)
	$ sudo cat /proc/meminfo			// MemTotal: 750512 kB
	$ sudo cat /proc/partitions			// major minor #blocks name
	$ sudo cat /etc/os-release			// PRETTY_NAME="Raspbian GNU/Linux 10 (buster)"

	$ uname -a							// get kernel ver , all:	Linux raspberrypi 4.14.90-v7+ #1183 SMP Fri Dec 21 14:03:50 GMT 2018 armv7l GNU/Linux
	$ uname -mrs						// get kernel version:		Linux 4.4.11-v7+ arm71 , Linux 4.14.49-v7+ armv7l
	$ bash -version						// bourne again shell:		GNU bash , version 4.3.30 (1)
	$ df -h								// shows mem disk file:		/dev/root 14G ...
	$ free -m							// shows mem ram:			Mem: 732 ...
	$ watch -n 60 uptime				// shows how much battery is being used?

	$ clear											// clear screen
	$ sudo date -s "Thu Jan 9 12:00:00 EST 2015"	// sets date
]

executables [

	$ sudo nano temp.sh				// begin file with: #!/bin/bash
	$ ls-lSX temp.sh				// show file
	$ chmod +x temp.sh				// change file permissions to make executable
	$ ./temp.sh						// run file , execute a shell script
]

navigation [

	pwd ls cd cp mkdir mv rm sudo tar apt / find ping man chown cat

	$ pwd								// prints working sirectory: /home/pi/
	$ ls -plaXR							// add / to dirs , long format , sort eXt , recursively
	$ ls -1 | wc -l						// counts (notice "L" , not '1')
	$ cd Desktop						// change directory: if already in /home/pi/
	$ cd python							// change directory: if already in /home/pi/
	$ mv xxxx.ttt yyyy.ttt				// rename
	$ cp xxxx.ttt yyyy.ttt				// copy
	$ rm xxxx.ttt						// remove/delete file
	$ rm -r xxxx.ttt					// remove recursively: BE CAREFUL!
	$ sudo rm -f /var/lib/motion/0*.xxx	// BE CAREFUL! removes file irregardless of permissions
	$ mkdir anyFolder					// make directory anyFolder
	$ man -help							// manual

	$ grep -H -n "espeak" python/*		// finds filename , number , text for text in filename pattern /**/
	$ find . -regex '.*/fswebcam*'		// finds files in pattern
	$ find . -iname anyFile.txt			// finds recursively insensitiveCase file 'anyFile.txt'
	$ find / -type d -name anyFolder	// finds in directoryRoot directory sensitiveCase 'anyFolder'
	$ find . -type f -name *.txt		// finds in directoryCurrent file sensitiveCase all txt files
	$ find . -type f -perm 0777 -print	// find all files with permissions 777
	$ find / -type f ! -perm 0777		// find all files without permissions 777
	$ find / -perm /a=x					// find all Executable files
	$ find / -mtime 50					// find all the files which are modified 50 days back
	$ find / -atime 50					// find all the files which are accessed 50 days back
	$ find / -amin -60					// find all the files which are accessed in last 1 hour

	$ find . -type f -name "anyFile.txt" -exec rm -f { } \ ;	// find a single file called tecmint.txt and remove it
	$ find /home -user anyUser -iname "*.txt"					// find all files that belongs to group Developer under /home directory

	$ filename							// concantenates file ; to output
	$ cat filename | less				// stops or pauses scroll , allows pageup pagedown

	$ tar -xvf anyZippedDir.tgz			// zips | c: creates, x: extracts, v: progress, f: filename, t: view
]

GUIs [

	$ sudo startx						// this starts LXDE , see: "C:\Martin\4Work\toolCode\raspberryPi\network.txt:ethernet used"
	$ sudo cp .Xauthority ~root/		// if CAT5 network
	$ lxsession							// if CAT5 network
]

xtra [

	$ espeak "Hello, World!"
	$ flite -t "Hello, World!"
	$ echo "Hello, World!" | festival --tts
	$ ./speech.sh "Hello, World!"

	$ sed -n '5,10p;10q' robots.txt | espeak
	$ sed -n '5,10p;10q' robots.txt | flite
	$ sed -n '5,10p;10q' robots.txt | festival --tts

	$ for value in {1..10}
		do
		echo $value
		done

	$ echo $((1 + $RANDOM % 10))

	https://dev.to/0xbf/run-multiple-commands-in-one-line-with-and-linux-tips-5hgm
	$ for value in {1..10}; do echo $((5 + $RANDOM % 26)); done
]
]

bash 2 (ANSI configs network usb Xming cpp comm) [

ANSI [

	Black		0 ;30	Dark Gray	1 ;30
	Red			0 ;31	Light Red	1 ;31
	Green		0 ;32	Light Green	1 ;32
	Brown/Orng	0 ;33	Yellow		1 ;33
	Blue		0 ;34	Light Blue	1 ;34
	Purple		0 ;35	Light Prpl	1 ;35
	Cyan		0 ;36	Light Cyan	1 ;36
	Light Gray	0 ;37	White		1 ;37

	RED='\033[ 1 ;31m'
	BLU='\033[ 1 ;34m'
	GRN='\033[ 1 ;32m'
	ORN='\033[ 0 ;33m'
	PUR='\033[ 0 ;35m'
	NCL='\033[ 0m' // No Color
	echo -e "I ${ RED }LOVE${ NCL } MEG\n"
]

configs [ basic nano encoding system

basic [

	$ sudo su											// set user to sudo
	$ sudo dpkg-reconfigure console-setup				// change terminal font "GUI"
	$ sudo nano /etc/default/console-setup				// change terminal font "CLI"
		change FONTFACE = "Terminus" ,
		FONTSIZE = "16x32"
		#FONTSIZE = "12x24"

		$ sudo /etc/init.d/console-setup restart

		$ fc-list // shows fonts

	$ sudo nano /boot/config.txt						// manually edit default Raspberry Pi config
	$ sudo nano /etc/wpa_supplicant/wpa_supplicant.conf	// shows network config
	$ sudo nano /etc/network/interfaces					// update password , etc
	$ sudo chmod a+rwx commands.conf					// change commands rights
	$ sudo chmod 777 file.ext							// change to read/write
	$ sudo chgrp pi file.ext							// change to group pi
	$ sudo chown pi file.ext							// change to owner pi
	$ setterm -blank 1									// set terminal to blank ; you can even "force" it to close now
	$ dmesg | less										// show startup log
	$ dmesg | grep anytext								// show startup log parts
	$ tabs -4											// set tab width to 4
]

nano [

	$ sudo nano ~/.bashrc

		tabs -4											// set tab width to 4

	$ sudo nano /etc/nanorc								// config file that requires the nanorc

		set tabsize 4

		## JavaScript
		include "/usr/share/nano/js.nanorc" or			// apparently nanorc.nanorc must be first
		include /usr/share/nano/*						/* does not seem to work */

		notes
			saving these files on Notepad may require globally removing "\n"
			there is a bug in nano < 2.7.4-1; nano: /etc/nanorc is ignored, if ~/.nanorc exists

	$ ls /usr/share/nano/

		// syntax highlight coloring for files

		https://unix.stackexchange.com/questions/148/colorizing-your-terminal-and-shell-environment
		https://wolfgang-ziegler.com/blog/enable-javascript-syntax-highlighting-in-the-nano-text-editor

		$ sudo nano /usr/share/nano/javascript.nanorc		// syntax highlighting for nano js
		$ sudo nano /usr/share/nano/python.nanorc			// syntax highlighting for nano python

		see: "\\5Personal\Technology\raspberryPi\html.nanorc"

		ERROR [

			Failed to start dhcpd on all interfaces.
			See 'systemctl status dhcpd.service' for details.
		]
]

encoding [

	http://python.org/dev/peps/pep-0263/

	editor
	# encoding: utf-8

	binary
	# -*- coding: utf-8 -*-
]

system [

	$ sudo killall applicationName.bin	// force quit (kill) an application type
	$ sudo kill -9 XXXXX				// XXXXX is the PID for the process you want to kill. Can be found using the ‘top’ command
]
]

network [

	// if you can not connect to the network at all, set ssid & psk in:
	// $ sudo nano /etc/wpa_supplicant/wpa_supplicant.conf
	// then, ifconfig;
	see: "\\5Personal\Technology\raspberryPi\docs\network.txt"

	$ hostname -I						// gets IP address: 169.254.79.11 , 192.168.0.22

	$ ls /sys/class/net/				// show active interface

	$ sudo iwgetid						// shows all available connections , eth0 , lo , wlan0 // wlan0 ESSID:"xxxxxx"
	$ sudo iwlist wlan0 scan			// shows all available WiFi networks
	$ sudo ifconfig						// gets network info & IP address
	$ sudo ifconfig wlan0				// gets network info
	$ sudo service --status-all		// list all running services

	$ ping -q -t 5 -w1 -c1 8.8.8.8 t	// shows internet connection
]

usb [

	$ lsusb	[					// show usb

		pi@raspberrypi:~ $ lsusb
		Bus 001 Device 005: ID 148f:5370 Ralink Technology, Corp. RT5370 Wireless Adapter
		Bus 001 Device 004: ID 046d:c52b Logitech, Inc. Unifying Receiver
		Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. SMSC9512/9514 Fast Ethernet Adapter
		Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp. SMC9514 Hub
		Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
	]

	$ lsb_release -a [			// shows standard linux base

		No LSB modules are available.
		Distributor ID: Raspbian
		Description:    Raspbian GNU/Linux 10 (buster)
		Release:        10
		Codename:       buster
	]

	$ dmesg | grep -i wlan [	// prints the message buffer of the kernel

		// shows kernel messages related to wifi access; also shows router address

		[    5.905601] usb 1-1.5: Product: 802.11 n WLAN
		[   15.962660] wlan0: authenticate with 10:0c:6b:1f:4e:24
		[   15.988587] wlan0: send auth to 10:0c:6b:1f:4e:24 (try 1/3)
		[   15.998025] wlan0: authenticated
		[   16.001116] wlan0: associate with 10:0c:6b:1f:4e:24 (try 1/3)
		[   16.044632] wlan0: RX AssocResp from 10:0c:6b:1f:4e:24 (capab=0x411 status=0 aid=2)
		[   16.051680] wlan0: associated
		[   16.224279] IPv6: ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
		[   16.230253] wlan0: Limiting TX power to 30 (30 - 0) dBm as advertised by 10:0c:6b:1f:4e:24
	]

	$ usb-devices [				// shows usb-devices

		...

		T:  Bus=01 Lev=02 Prnt=02 Port=02 Cnt=02 Dev#=  4 Spd=12  MxCh= 0
		D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=32 #Cfgs=  1
		P:  Vendor=046d ProdID=c52b Rev=24.01
		S:  Manufacturer=Logitech
		S:  Product=USB Receiver
		C:  #Ifs= 3 Cfg#= 1 Atr=a0 MxPwr=98mA
		I:  If#=0x0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
		I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
		I:  If#=0x2 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid

		T:  Bus=01 Lev=02 Prnt=02 Port=04 Cnt=03 Dev#=  5 Spd=480 MxCh= 0
		D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
		P:  Vendor=148f ProdID=5370 Rev=01.01
		S:  Manufacturer=Ralink
		S:  Product=802.11 n WLAN
		S:  SerialNumber=1.0
		C:  #Ifs= 1 Cfg#= 1 Atr=80 MxPwr=450mA
		I:  If#=0x0 Alt= 0 #EPs= 7 Cls=ff(vend.) Sub=ff Prot=ff Driver=rt2800usb
	]

	$ lsblk [					// disk partitions?

		NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
		mmcblk0     179:0    0 29.8G  0 disk
		+-mmcblk0p1 179:1    0  256M  0 part /boot
		+-mmcblk0p2 179:2    0 29.6G  0 part /
	]

	$ sudo blkid [				// disk partitions?

		/dev/mmcblk0p1: LABEL_FATBOOT="boot" LABEL="boot" UUID="4467-8C16" TYPE="vfat" PARTUUID="057e1fee-01"
		/dev/mmcblk0p2: LABEL="rootfs" UUID="66f68227-b1ae-4493-9ef5-e593576a6e81" TYPE="ext4" PARTUUID="057e1fee-02"
		/dev/mmcblk0: PTUUID="057e1fee" PTTYPE="dos"
	]

	$ sudo fdisk -l [			// RAM allocations?

		Disk /dev/ram0: 4 MiB, 4194304 bytes, 8192 sectors
		Units: sectors of 1 * 512 = 512 bytes
		Sector size (logical/physical): 512 bytes / 4096 bytes
		I/O size (minimum/optimal): 4096 bytes / 4096 bytes

		Disk /dev/ram1: 4 MiB, 4194304 bytes, 8192 sectors
		Units: sectors of 1 * 512 = 512 bytes
		Sector size (logical/physical): 512 bytes / 4096 bytes
		I/O size (minimum/optimal): 4096 bytes / 4096 bytes

		...

		Disk /dev/ram15: 4 MiB, 4194304 bytes, 8192 sectors
		Units: sectors of 1 * 512 = 512 bytes
		Sector size (logical/physical): 512 bytes / 4096 bytes
		I/O size (minimum/optimal): 4096 bytes / 4096 bytes

		Disk /dev/mmcblk0: 29.8 GiB, 32010928128 bytes, 62521344 sectors
		Units: sectors of 1 * 512 = 512 bytes
		Sector size (logical/physical): 512 bytes / 512 bytes
		I/O size (minimum/optimal): 512 bytes / 512 bytes
		Disklabel type: dos
		Disk identifier: 0x057e1fee

		Device         Boot  Start      End  Sectors  Size Id Type
		/dev/mmcblk0p1        8192   532479   524288  256M  c W95 FAT32 (LBA)
		/dev/mmcblk0p2      532480 62521343 61988864 29.6G 83 Linux
	]
]

Xming [

	putty Configuration > Connection > SSH > X11 >
		> (x) Enable X11 forwarding > X display location > localhost: 0

	// https://feh.finalrewind.org

		$ raspistill -t 100 -vf -o img.jpg	-md 6 -q 10

		$ feh -g 600x400 -d img.jpg

		shell: C:\servers\Xming\Xming.exe :0 -screen 0 800x600+100+100@1
			(or)
			C:\servers\Xming\Xming.exe :0 -clipboard -multiwindow

			// REFERENCE ONLY
			C:\servers\Xming\Xming.exe :1 -query 192.168.1.22 -screen 0 800x600+100+100@1
]

cpp [

	$ gpio -v			// see if you have it; 2019/12/10: gpio version: 2.50
	$ gpio readall		// confirm access

		$ sudo apt-get install wiringpi	// in some cases?
		$ sudo apt-get purge wiringpi
		$ hash -r

		$ cd
		$ git clone git://git.drogon.net/wiringPi
		$ git clone git://github.com/WiringPi/WiringPi
		$ cd WiringPi
		$ ./build

	gcc sees *. c files as a c program
	g++ sees *. c files as a c ++ program
	diff defaults is which libraries link automatically

		// https://cs.fit.edu/~mmahoney/cse1502/tutorial/
		// https://www.programiz.com/cpp-programming/examples
		// \home\pi\lang\sample.cpp

		$ g++ -o lang/sample lang/sample.cpp
		$ ./lang/sample

	"L" means an array of wide characters (wchar_t)	, "A" = 41 , L"A" = 00 41
]

comm [

	https://learn.sparkfun.com/tutorials/raspberry-pi-spi-and-i2c-tutorial/all
	https://www.instructables.com/id/Raspberry-Pi-I2C-Python/

	python [ AdafruitLegacy, CircuitPython

		# What happened to all the Raspberry Pi Python code!?

		example code to talk to sensors like the BMP085, TCS34725, character LCD plates moved
			all old Python code moved to GitHub repositories
			https://pypi.python.org/pypi
			they can be installed with `pip` (not example code)
			All Python libraries now support Python 3.x and many Linux/Single Board Computers
			See old RPi code @ https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/legacy
			It is a snapshot of old code before refactor as unit libraries and NOT maintained!

		CircuitPython has support for almost 200 different drivers
			This library has been deprecated in favor of our python3 Blinka library
			see: https://github.com/adafruit/Adafruit_Blinka
			see: https://circuitpython.org/blinka
			see: https://circuitpython.readthedocs.io/projects/bundle/en/latest/drivers.html
			see: https://learn.adafruit.com/circuitpython-on-raspberrypi-linux/installing-circuitpython-on-raspberry-pi

			$ sudo pip3 install adafruit-circuitpython-mcp4725
			$ sudo pip3 install adafruit-circuitpython-busdevice
			$ sudo pip3 install --upgrade setuptools
			$ sudo apt-get install python3-pip
			Enabling Second SPI add "boot/config.txt" dtoverlay=spi1-3cs
			$ sudo pip3 install adafruit-blinka
			$ sudo pip3 install adafruit-circuitpython-ssd1306

		For FT232H support for Mac/Win/Linux:
			see: https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h
			FT232H uses FTDI (Future Technology Devices International)
			TTL serial (Transistor Transistor Logic)
	]

	I2C [

		I2C is a communication bus by Philips for chips to communicate with each other on a PCB.

		// seems to be required in older configurations

			$ sudo raspi-config			// assumes enabled I2C & SPI under "raspi-config":

			$ sudo nano /etc/modprobe.d/raspi-blacklist.conf

				blacklist spi-bcm2708	// comment out if needed?
				blacklist i2c-bcm2708	// comment out if needed?

			$ sudo nano /etc/modules

				// already had i2c-dev in my case

		testing

			$ ls /dev/*i2c*						*// returns: "/dev/i2c-1"

			$ sudo apt-get install -y i2c-tools	// note i2c-tools: v4.1-1

			$ i2cdetect -y 0					// Error: Could not open file `/dev/i2c-0' or `/dev/i2c/0': No such file or directory

			$ i2cdetect -y 1					// shows available i2c devices

		SMBus (System Management Bus) is a subset from the I2C protocol

			http://wiki.erazor-zone.de/wiki:linux:python:smbus:doc
	]

	SPI [

		$ ls /dev/*spi* 				/**/

			for some reason the SPI files were gone:
			https://www.raspberrypi-spy.co.uk/2014/08/enabling-the-spi-interface-on-the-raspberry-pi/

		$ lsmod | grep spi			// confirmed: spi_bcm2835
		$ sudo apt-get install -y python-dev python3-dev

			in my case revealed:
			python-dev is already the newest version (2.7.16-1).
			python3-dev is already the newest version (3.7.3-1).

		$ sudo apt-get install -y python-spidev python3-spidev

			in my case revealed:
			python-spidev is already the newest version (20170223~145721-2).
			python3-spidev is already the newest version (20170223~145721-2).

			so i did NOT make the install
	]
]
]

startup (beg end) [

beg scripts [

	note: modify the "interfaces" file to connect to the lan:
	$ sudo nano /etc/network/interfaces

	https://www.dexterindustries.com/howto/run-a-program-on-your-raspberry-pi-at-startup/

	$ sudo nano /etc/rc.local	// when the Pi boots ; use & to spawn separate thread

		"rc" stands for "run commands"

	$ sudo nano ~/.bashrc		// when any terminal loads

		alias lsx='ls -lSX --color=auto'	// redefine listing with colors
		lsx
		#vncserver
		#export PATH=$PATH:/home/pi/servers/nodejs:/home/pi/servers/nodejs/bin
		tabs -4

		espeak "Greetings. Computer initialized."

	init.d						// directory for scripts started during boot process

	systemd						#

	crontab						// for timed entries
]

end scripts [

	https://www.element14.com/community/docs/DOC-78055/l/adding-a-shutdown-button-to-the-raspberry-pi-b
	https://www.raspberrypi.org/forums/viewtopic.php?f=63&t=56118

		files in "/etc/rc6.d/" runs reboot , rc0.d is shutdown ; also see: rc.shutdown

		see:
			/etc/init.d/halt
			/etc/init.d/reboot
			/etc/rc0.d/K10halt

	$ sudo nano /etc/rc0.d/K10halt

		echo "Computer deactivated. Goodbye."
		espeak "Computer deactivated. Goodbye."
]
]

python (idle nodejs) [

idle python [

		Python 3.2.3 (default Python 2.7.3)
			pibrella requires python 2 to run the files

		sudo idle			// for Python2 IDE ; useful for pibrella
		sudo idle3			// for Python3 IDE
		sudo python -i		// for interactive
		print("sys.version: " + sys.version)

		// see: /home/pi/python/piezo.py
		// see: /home/pi/python/led_vary.py
		// see: /home/pi/python/led_loop.py
		// see: /home/pi/python/pibrella_test.py
]

nodejs python [

	1 color for terminal

		pip install colorama

	2 using a child process

		http://stackoverflow.com/questions/23450534/how-to-call-python-function-from-nodejs
		http://www.sohamkamani.com/blog/2015/08/21/python-nodejs-comm/
		http://lukeramsey.io/child

		var execSync = require('child_process').execSync ;
		var result = execSync(pathFile) ;
		console.log(result.toString('utf8')) ;

	3 setup required for windows

		https://github.com/nodejs/node-gyp

		npm install -g node-gyp
		npm install --global --production windows-build-tools
			(as admin ; this installs python 2.7)

		node-gyp --python "C:\Users\mamge\.windows-build-tools\python27\python.exe"
		npm config set python "C:\Users\mamge\.windows-build-tools\python27\python.exe"

		create "C:\servers\nodejs\binding.gyp"
			{ "targets": [ { "target_name": "binding" , "sources": [ "src/binding.cc" ] } ] }

		node-gyp configure
		node-gyp build

	4 npm install python-shell

		https://github.com/extrabacon/python-shell
		var PythonShell = require('python-shell') ;
		PythonShell.run('my_script.py' , options , function (err , results) { ... });
		// you can send a message to python shell using pyshell.send('hello') ;

		ERROR: configuration

	5 npm install node-python

		ERROR: configuration
]
]

ERRORS [ updating booting

	ERROR: trouble updating/upgrading

		SOLUTION:
		tried lots of configuration checks.
		appears to be WiFi dongle not working ; replacing it enabled update

	ERROR: rPi0 not booting [

		[ * ] HW: replaced cables with adaptors
		[ * ] HW: replaced rPi0 with rPi0W
		[ * ] HW: confirmed power source for rPi at 5V 2.5 amp rating
		[ * ] HW: confirmed power source for USB hub
		[ * ] HW: confirmed Laptop to rPi USB port read device [ both rPi0 ]
		[ * ] HW: confirmed green LED on

		[ * ] SD: reformat 16 GB cards Samsung , SDFormatter , reloaded NOOBS 2.3
		[ * ] SD: reformat 16 GB cards Sandisk , SDFormatter , reloaded NOOBS 2.3
		[ * ] SD: reformat 32 GB cards Samsung , SDFormatter , reloaded NOOBS 2.3
		[ * ] SD: reformat 32 GB cards Samsung , SDFormatter , reloaded NOOBS 2.4
		[ * ] SD: reformat 32 GB cards Samsung , Windows10 , reloaded NOOBS 2.4
		[ * ] SD: altered NOOBs "recovery.cmdline" (was "cmdline.txt") to include HDMI lines
		[ * ] SD: install etcher > download image > transfer to SDCard

		[ * ] $ sudo nano /boot/config.txt
				hdmi_force_hotplug=1			// hdmi_drive=2

			Multiple boot stratagies failed for the rPi0. Thru deduction , the following were OK:

			[ * ] rPi0 device
			[ * ] card , image
			[ * ] power source
			[ * ] USB cables
			[ * ] HDMI to HDMI mini adaptor

			HDMI M2M cable appears to react differently.
			Swapping monitors seems to work.
			However , the keyboard now fails , seems to be problem with hub
			Individual port use works.

		[ * ] SOLUTION , FINAL , different cable!

			https://www.raspberrypi.org/forums/viewtopic.php?f=91&t=34061
			http://elinux.org/R-Pi_Troubleshooting#Startx_fails_to_start

			// looks like the particular cable was not getting enough signal

			$ sudo nano /boot/config.txt

				hdmi_force_hotplug=1
				config_hdmi_boost=4

				hdmi_drive=2 // might be useful to get audio to work
	]
]

install (SDcard NOOBs configure extras) [

	SDcard prepare [ card download format SSH

		SD card

			https://www.raspberrypi.org/documentation/installation/installing-images/

			RPis ONLY reads FAT16 or FAT32 filesystems
			RPi can NOT boot from an exFAT filesystem
			RPis GPU bootloader is NOT updateable
			32GB can NOT be used unless formatted as FAT32
			SD card > 32GB is an SDXC card ; must be formatted as FAT32 filesystem

		download & install SD Formatter

			download & install SD Associations Formatting Tool (sdcard.org)
			"C:\Program Files (x86)\SDA\SD Formatter\SDFormatter.exe"

			(another "flasher" is Win32 DiskImager)

		format SD card

			set "FORMAT SIZE ADJUSTMENT" option to "ON" in the "Options" menu
			this ensures the entire SD card volume is formatted

		SSH is disabled by default in the newer Raspbian images.
			Create a blank text file called "ssh" on the root of the SD card using your laptop.
	]

	download OS [ extract download copy load

		extract OS using NOOBs (New Out Of the Box software)

		download NOOBs software ; extract

			https://www.raspberrypi.org/downloads/noobs/

			NOOBS installs Raspbian

		copy files (not folder) onto SD card

		load SD card onto RPi , and run
	]

	configure [ bootup remote

		if "NOOBS" is the setup, THEN A KEYBOARD AND MONITOR IS NEEDED

			in this case, NOOBS handles the wifi setup thru the external monitor

		if GUI is installed, update network icon in GUI

			RC toolbar > Panel Settings > Panel Preferences > WiFi Networks (dhcpcdui)
			enter key

		bootup in CLI mode

			$ sudo raspi-config			// select CLI bootup mode

				NOTE: Updating interfaces requires quotes "" which requires an US keyboard.
				The image was set in GB , so raspi-config was needed to change localization.
				Several menus were passed to get to it.

			$ sudo apt-get update -y	// super user do advanced packaging tool update
			$ sudo apt-get upgrade -y	// super user do advanced packaging tool upgrade
			$ sudo reboot

		configure remote (Raspberry Pi setup)

			see: "network.txt":internet		for network connection
			see: "network.txt":network_SSH	for remote shell access
	]

	extras [ speakers images sqlite3 git node gpio other

		$ sudo dpkg -l | grep -i  xxx
			// dpkg -l | grep -i "ii  sql"
			// dpkg -l | grep -i blue

		speakers	[ complicated		// espeak v1.48.04+dfsg-7+deb10u1

			see: "\\5Personal\Technology\raspberryPi\docs\bluetooth.txt"
			see: "\\5Personal\Technology\raspberryPi\docs\sound.txt"

			$ sudo bluetoothctl
				// GH_BT3500:	12:12:28:6C:78:8C
				// InSiq:		68:F7:FA:DF:79:FB

				[bluetooth]# power on
				[bluetooth]# pair		68:F7:FA:DF:79:FB
				[bluetooth]# connect	68:F7:FA:DF:79:FB

				[bluetooth]# trust		68:F7:FA:DF:79:FB
				[bluetooth]# info		68:F7:FA:DF:79:FB

				[bluetooth]# exit

			// dpkg -l | grep -i espeak
			$ sudo apt-get install espeak python-espeak -y
			$ echo -e 'connect 12:12:28:6C:78:8C \n quit' | sudo bluetoothctl // GH_BT3500
			$ espeak "Hi There"

			$ aplay mamgeorge/sound/ping.wav
		]

		images		[ feh fbi cacaview; requires XMing

			$ sudo apt-get install feh -y			// feh v3.1.3-1

				FEH: Image viewer
				https://man.finalrewind.org/1/feh/

				$ feh -g 600x400 -d image.jpg // g: geometrySize, d: drawFilename

			$ sudo apt-get install fbi -y 			// fbi v2.10-3

				FBI: FrameBuffer Image viewer
				https://www.raspberrypi-spy.co.uk/2017/02/how-to-display-images-on-raspbian-command-line-with-fbi/

				$ sudo fbi -T 2 -a image.jpg

			$ sudo apt-get install caca-utils -y	// cacaview v0.99.beta19-2.1

				should read any images
				https://www.carta.tech/man-pages/man1/cacaview.1.html

				$ cacaview image.jpg

				ERROR [ PuTTY X11 proxy: unable to connect

					PuTTY X11 proxy: unable to connect to forwarded X server: Network error: Connection refused

					// $ pip install img2txt -y

						// img2txt requires py3to2
						// py3to2 requires Python-2.6.1

					RESOLUTION: need to run XMing
				]
		]

		$ sudo apt-get install sqlite3 [ // sqlite3 v3.27.2

			https://randomnerdtutorials.com/sqlite-database-on-a-raspberry-pi/
		]

		git			[ // git v2.20.1

			c:> cd C:\Users\mamge\OneDrive\Documents\5Personal\Technology\raspberryPi

				fatal: This operation must be run in a work tree
				git init
		]

		node		[ // node v15.5.1, npm v6.14.10

			// default was node v10.21.0, npm v5.8.0

				ERROR: npm WARN npm npm does not support Node.js v10.21.0

				$ curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -
				$ sudo apt-get install -y nodejs

				or
					$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
					$ command -v nvm	// prints NVM if NVM is installed

					reload terminal!
					$ nvm install node	// updating to latest node version

			// starts package json for project

			$ cd myapp
			$ npm init

			// others

			$ npm install express --save	// express@4.17.1
			$ npm install log4js			// log4js@6.3.0
			$ npm install colors			// colors@1.4.0
			$ npm install rpi-gpio			// rpi-gpio@2.1.7

			$ npm list --depth=0			// lists versions
		]

		gpio		[ // gpio v2.50

			ERROR: Oops - unable to determine board type... model: 17

				cd /tmp
				wget https://project-downloads.drogon.net/wiringpi-latest.deb
				sudo dpkg -i wiringpi-latest.deb
		]

		other		[ printer mc

			see CookBook 2.12 for printer access [ ]

			? sudo apt-get install mc [ // midnight commander

				1 Display Server > Xorg Display Server

				2 Desktop Environment >
					PIXEL	Pi Improved Xwindows Environment Lightweight
					LXDE	Lightweight X11 Desktop Environment
					XFCE	XFCE Desktop Environment
					MATE	MATE Desktop Environment

				3 Window Manager >
					PIXEL/LXDE	Openbox Window Manager
					XFCE		XFWM Window Manager
					MATE		Marco Window Manager

				4 Login Manager > LightDM Login Manager
			]
		]
	]
]
----
